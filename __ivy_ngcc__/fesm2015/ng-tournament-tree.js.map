{"version":3,"file":"ng-tournament-tree.js","sources":["ng:/ng-tournament-tree/lib/double-elimination-tree/double-elimination-tree.component.ts","ng:/ng-tournament-tree/lib/double-elimination-tree/ngtt-double-elimination-tree.module.ts","ng:/ng-tournament-tree/lib/single-elimination-tree/single-elimination-tree.component.ts","ng:/ng-tournament-tree/lib/single-elimination-tree/ngtt-single-elimination-tree.module.ts","ng:/ng-tournament-tree/lib/ng-tournament-tree.module.ts","ng:/ng-tournament-tree/lib/declarations/interfaces.ts"],"names":["components"],"mappings":"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","sourcesContent":["import {Component, Input, OnChanges, SimpleChanges, TemplateRef} from '@angular/core';\r\nimport {NgttRound, NgttTournament} from '../declarations/interfaces';\r\n\r\n@Component({\r\n  selector: 'ngtt-double-elimination-tree',\r\n  templateUrl: './double-elimination-tree.component.html',\r\n  styleUrls: ['./double-elimination-tree.component.scss']\r\n})\r\nexport class DoubleEliminationTreeComponent implements OnChanges {\r\n  @Input() matchTemplate: TemplateRef<any>;\r\n  @Input() tournament: NgttTournament;\r\n\r\n  public losersBracket: NgttRound[];\r\n  public winnersBracket: NgttRound[];\r\n  public final: NgttRound;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.losersBracket = this.tournament.rounds.filter(round => {\r\n      return round.type === 'Loserbracket';\r\n    });\r\n    this.winnersBracket = this.tournament.rounds.filter(round => {\r\n      return round.type === 'Winnerbracket';\r\n    });\r\n    this.final = this.tournament.rounds.filter(round => {\r\n      return round.type === 'Final';\r\n    }).shift();\r\n  }\r\n\r\n}\r\n","import {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {DoubleEliminationTreeComponent} from './double-elimination-tree.component';\r\n\r\nconst components = [DoubleEliminationTreeComponent];\r\n\r\n@NgModule({\r\n  declarations: components,\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: components\r\n})\r\nexport class NgttDoubleEliminationTreeModule {\r\n}\r\n","import {Component, Input, OnChanges, OnInit, SimpleChanges, TemplateRef} from '@angular/core';\r\nimport {NgttRound, NgttTournament} from '../declarations/interfaces';\r\n\r\n@Component({\r\n  selector: 'ngtt-single-elimination-tree',\r\n  templateUrl: './single-elimination-tree.component.html',\r\n  styleUrls: ['./single-elimination-tree.component.scss']\r\n})\r\nexport class SingleEliminationTreeComponent implements OnInit, OnChanges {\r\n  @Input() matchTemplate: TemplateRef<any>;\r\n  @Input() tournament: NgttTournament;\r\n\r\n  public winnersBracket: NgttRound[];\r\n  public final: NgttRound;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.hasOwnProperty('tournament') && changes.tournament.currentValue) {\r\n      this.winnersBracket = this.tournament.rounds.filter(round => {\r\n        return round.type === 'Winnerbracket';\r\n      });\r\n    }\r\n    console.log(this.winnersBracket);\r\n    this.final = this.tournament.rounds.filter(round => {\r\n      return round.type === 'Final';\r\n    }).shift();\r\n    console.log(this.final);\r\n  }\r\n\r\n}\r\n","import {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {SingleEliminationTreeComponent} from './single-elimination-tree.component';\r\n\r\nconst components = [SingleEliminationTreeComponent];\r\n\r\n@NgModule({\r\n  declarations: components,\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: components\r\n})\r\nexport class NgttSingleEliminationTreeModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {NgttDoubleEliminationTreeModule} from './double-elimination-tree/ngtt-double-elimination-tree.module';\r\nimport {NgttSingleEliminationTreeModule} from './single-elimination-tree/ngtt-single-elimination-tree.module';\r\n\r\nconst modules = [NgttSingleEliminationTreeModule, NgttDoubleEliminationTreeModule];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: modules,\r\n  exports: modules\r\n})\r\nexport class NgTournamentTreeModule {\r\n}\r\n","export interface NgttTournament {\r\n  rounds: NgttRound[];\r\n}\r\n\r\nexport interface NgttRound {\r\n  /**\r\n   * The type determines where in which branch to place a match.\r\n   * SingleElimination-Trees only consist of a winnerbracket and a final\r\n   */\r\n  type: 'Winnerbracket' | 'Loserbracket' | 'Final';\r\n  matches: any[];\r\n}\r\n\r\n"]}